This is a tutorial of how to use MediaWiki toAuthor Information Generation using MediaWiki

This is a tutorial of how to use MediaWiki to get specific information of an author using their name.


## Getting Started

To interact with the MediaWiki API, an endpoint9 (i.e. an url) including specific information of what you want. An example endpoint is:

<https://en.wikipedia.org/w/api.php?format=json&action=query&prop=extracts&exintro=&explaintext=&titles=Stack%20Overflow>

which gives a result of the text of the introduction section. In this tutorial we will be creating a similar endpoint using JQuery and AJAX to get only the information contained in the introduction section of the wiki page of each author. 

As a side note, there are multiple ways to achieve this same results depending on how much information you want. While we use the action=query method, there is also an action=parse method (Follow link for more information on the difference between the two: ) that gives similar results. 

## Creating MediaWiki Data and an AJAX request

To create an AJAX request to the MediaWiki API, you need to first create the data object that will be added as a parameter into the request. This data object is basically an object type (or dictionary) made up of key and value pairs specific to the API. Depending on the type of action that is being performed, these key/value pairs will be different. 
```
	var dataObj1 = { format: "json", action: "query", prop: "extracts", exintro: "", 			explaintext: "", redirects: true};
	var x = "titles";
	var url_path = (window.location.pathname).split("/")[2];
        var auth_name = decodeURIComponent(url_path);
        dataObj1[x] = auth_name;
```
The first line defines the data for the AJAX request where format indicates the format in which you want the data returned in. You have the choice between json, jsonfm , php, txt and many more. (https://www.mediawiki.org/wiki/API:Data_formats) The action key allows users to specify how they would like to receive information from the API. In this tutorial we use action: “query” , which directly fetches information from the API. (Follow this link for information about other parameters for action: https://en.wikipedia.org/w/api.php) The prop: “extracts” key value pair “returns plain-text or limited HTML extracts of the given pages.”(https://www.mediawiki.org/wiki/Extension:TextExtracts) As an extension to prop:”extracts”, the keys exintro and explain text are included in the data object. Both these keys take boolean values, where no values indicates a false value (follow this link to read more about prop:extracts and its extensions > https://www.mediawiki.org/wiki/Extension:TextExtracts). The next key, redirects, is set to true so that in the case the api cannot find an exact wiki page for a given search text, and instead a different wiki page that is in some way related to the original search text. The last key that is added to the data object is the titles key. The titles key is where users request a specific wiki page using the name of the object, person, place, etc. In this case, we are requesting the wiki page of mainly people and organizations. To access the name of the person or organization, the url path is broken down and decoded so that the text at the end of the url (i.e the name of the organization or person) is retrieved and used as the value of the titles key.

Once the data is assembled. An AJAX request is made to the Media Wiki API. For more information about how to format an ajar request using jquery go to http://api.jquery.com/jquery.ajax/. To break down the last section of the AJAX request

```
 $.ajax({
                url: "https://en.wikipedia.org/w/api.php",
                data: dataObj1,
                dataType: 'jsonp',
                success: function (data) {
                        var auth_wiki_intro = Object.keys(data.query.pages)[0];
                        if(auth_wiki_intro == "-1"){
                                var noInfo = "No information currently avaliable for " + auth_name + ".";
                                $('#article').append($('<h4></h4>').html(noInfo));
                        } else{
                                var abt_header = "About " + auth_name;
                                $('#article').append($('<h4></h4>').html(abt_header));

                                var markup = data.query.pages[auth_wiki_intro].extract;
                
                                var i = $('<div></div>').html(markup);  
                                $('#article').append(i);
                        }
                        
                }});
```













 get specific information of an author using their name.
